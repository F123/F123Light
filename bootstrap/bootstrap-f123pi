#!/bin/bash

export TEXTDOMAIN=pacstrap-alarmpi
#export TEXTDOMAINDIR=$PWD/locale
export TEXTDOMAINDIR=/usr/local/share/locale

. gettext.sh

. ./pacstrap-f123pi.lib

usage() {
	echo "This is the bootstrap usage"
}

set -e

#while getopts ':dho:p:r:u:' flag
while getopts ':dh' flag
do
case $flag in
d)
directory=1
;;
h)
usage
exit 0
;;
:)
msg=$(gettext "Option requires an argument")
die '%s: %s -- '\''%s'\' "${0##*/}" "${msg}" "$OPTARG"
;;
?)
msg=$(gettext "Invalid option")
die '%s: %s -- '\''%s'\' "${0##*/}" "${msg}" "$OPTARG"
;;
esac
done

shift $(( OPTIND - 1 ))

(( $# )) || die "No root directory specified"

newroot=$1; shift


# Basic alarmpi packages
./pacstrap-f123pi -l package_lists/alarmpi.base.pkglist -d "${newroot}"

# Basic f123pi packages
./pacstrap-f123pi -l package_lists/f123pi.base.pkglist -d "${root}"

# Console accessibility related packages
./pacstrap-f123pi -l package_lists/alarmpi.a11y.pkglist -d "${newroot}"

# Development tools packages
./pacstrap-f123pi -l ./package_lists/develtools.pkglist -d "${newroot}"

#
# Put extra calls to pacstrap-f123pi in here when more configurations are added.
#
# Such as package lists which contain desktop packages
#


[ -z "${HOSTNAME}" ] && HOSTNAME=alarmpi
[ -z "${ROOTPWD}" ] && ROOTPWD=root
[ -z "${USERNAME}" ] && USERNAME=alarm
[ -z "${USERPWD}" ] && USERPWD=alarm

./config-base-f123pi -o "${HOSTNAME}" -r "${ROOTPWD}" -u "${USERNAME}" -p "${USERPWD}" -d "${newroot}"

#
# Put more calls to bespoke config scripts in here.
#
# Such as when desktop environments are added which need extra configuration
#


