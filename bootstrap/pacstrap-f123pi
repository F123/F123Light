#!/bin/bash

export TEXTDOMAIN=pacstrap-alarmpi
#export TEXTDOMAINDIR=$PWD/locale
export TEXTDOMAINDIR=/usr/local/share/locale

. gettext.sh

set -e

if [ `whoami` != 'root' ]; then
	progname=$0
	echo $(eval_gettext "Must be run as root, try: sudo \${progname}") ; echo
	exit 1
fi

pi_base=(base linux-raspberrypi linux-raspberrypi-headers raspberrypi-firmware)
service_packages=(openssh sudo ntp)
 extra_packages=(parted  dialog libnewt yajl liburcu json-c tcl tk emacs-nox espeak git)
custom_packages=(package-query yaourt tclx)
devel_packages=(base-devel)

hostname=alarmpi
rootpwd=root
username=alarm
userpwd=alarm

chroot_="${1}"

[ -z "${chroot_}" ] && { echo $(gettext "No directory given") ; echo ; exit 1 ; }
[ -d "${chroot_}" ] || mkdir "${chroot_}"

shift

if findmnt "${chroot_}" ; then
	echo $(eval_gettext "Pacstrapping into mount-point \${chroot_}") ; echo
	pacstrap "${chroot_}" "${pi_base[@]}" "${service_packages[@]}" "${extra_packages[@]}" "${custom_packages[@]}" "${devel_packages[@]}" $@
else
echo $(eval_gettext "Pacstrapping into directory \${chroot_}") ; echo
	pacstrap -d "${chroot_}" "${pi_base[@]}" "${service_packages[@]}" "${extra_packages[@]}" "${custom_packages[@]}" "${devel_packages[@]}" $@
fi


cp /boot/*.bin "${chroot_}"/boot
cp /boot/*.dat "${chroot_}"/boot
cp /boot/*.elf "${chroot_}"/boot

chroot "${chroot_}"/ mknod -m 600 /dev/console c 5 1
chroot "${chroot_}"/ mknod -m 666 /dev/null c 1 3
chroot "${chroot_}"/ mknod -m 666 /dev/zero c 1 5

# set the host name
chroot "${chroot_}" /bin/bash -c 'echo "alarmpi" > /etc/hostname'

# add root partition mount info to /etc/fstab
chroot "${chroot_}" /bin/bash -c 'echo -e "\n\n/dev/mmcblk0p1  /boot   vfat    defaults        0       0\n\n" >> /etc/fstab'

# add line to /etc/hosts.allow to allow all hosts
chroot "${chroot_}" /bin/bash -c 'echo "SSHD: ALL" >> /etc/hosts.allow'

# add dtparam=audio=on to /boot/config.txt
chroot "${chroot_}" /bin/bash -c "echo -e \"\n\ndtparam=audio=on\n\n\" >> /boot/config.txt"


# set root password
echo -e "root\nroot\n" | chroot "${chroot_}" /usr/bin/passwd root


# add a user and set the password
chroot "${chroot_}" useradd -m -g users -G wheel,storage,power,uucp,audio -s /bin/bash alarm
echo -e "alarm\nalarm\n" | chroot "${chroot_}" /usr/bin/passwd alarm

# enable dhcpcd.service
chroot "${chroot_}" systemctl enable dhcpcd.service

# enable sshd.service
chroot "${chroot_}" systemctl enable sshd.service

# enable ntpd.service
chroot "${chroot_}" systemctl enable ntpd.service

# install some files



# Files for /etc/modules-load.d
install -m0644 ./files/etc/modules-load.d/* "${chroot_}"/etc/modules-load.d

# udev rule files
install -m0644 ./files/etc/udev/rules.d/* "${chroot_}"/etc/udev/rules.d

# Root file system auto expansion
install -d "${chroot_}"/usr/lib/raspi-config
install -m0755 ./files/usr/lib/raspi-config/init_resize.sh "${chroot_}"/usr/lib/raspi-config


echo $(gettext "All done") ; echo
